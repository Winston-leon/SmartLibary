<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--<mapper namespace="com.ssm.maven.core.dao.UserDao">-->
<!--    <resultMap type="User" id="UserResult">-->
<!--        <result property="id" column="id"/>-->
<!--        <result property="userName" column="user_name"/>-->
<!--        <result property="password" column="password"/>-->
<!--        <result property="roleName" column="role_name"/>-->
<!--    </resultMap>-->

<mapper namespace="com.ssm.maven.core.dao.UserDao">
    <resultMap type="User" id="UserResult">
        <result property="id" column="id"/>
        <result property="userName" column="user_name"/>
        <result property="password" column="password"/>
        <result property="name" column="name"/>
        <result property="email" column="email"/>
        <result property="mobile" column="mobile"/>
        <result property="role_id" column="role_id"/>
        <result property="role_priv_level" column="role_priv_level"/>
        <result property="status" column="status"/>
    </resultMap>

    <select id="login" parameterType="User" resultMap="UserResult">
        select * from
        ssm_user where user_name=#{userName} and password=#{password} limit 1
    </select>

    <select id="findUsers" parameterType="Map" resultMap="UserResult">
        select * from ssm_user
        <where>
            <if test="userName!=null and userName!='' ">
                and user_name like #{userName}
            </if>
        </where>
        <if test="start!=null and size!=null">
            limit #{start},#{size}
        </if>
    </select>

    <select id="getTotalUser" parameterType="Map" resultType="Long">
        select count(*) from ssm_user
        <where>
            <if test="userName!=null and userName!='' ">
                and user_name like #{userName}
            </if>
        </where>
    </select>

    <insert id="addUser" parameterType="User">
        insert into ssm_user(user_name,password,name,email,mobile,role_id,role_priv_level,status)
        values(#{userName},#{password},#{name},#{email},#{mobile},#{role_id},#{role_priv_level},#{status})
    </insert>

    <update id="updateUser" parameterType="User">
        update ssm_user
        <set>
            <if test="userName!=null and userName!='' ">
                user_name=#{userName},
            </if>
            <if test="password!=null and password!='' ">
                password=#{password},
            </if>
            <if test="name!=null and name!='' ">
                name=#{name},
            </if>
            <if test="email!=null and email!='' ">
                email=#{email},
            </if>
            <if test="mobile!=null and mobile!='' ">
                mobile=#{mobile},
            </if>
            <if test="role_id!=null and role_id!='' ">
                role_id=#{role_id},
            </if>
            <if test="role_priv_level!=null and role_priv_level!='' ">
                role_priv_level=#{role_priv_level},
            </if>
            <if test="status!=null ">
                status=#{status}
            </if>
        </set>
        where id=#{id}
    </update>

    <delete id="deleteUser" parameterType="Integer">
        delete from ssm_user
        where id=#{id}
    </delete>
</mapper> 